{"version":3,"sources":["../src/index.ts","../src/rehypeMermaid.ts"],"sourcesContent":["import { unified } from 'unified';\nimport remarkParse from 'remark-parse';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport remarkFrontmatter from 'remark-frontmatter';\nimport remarkDirective from 'remark-directive';\nimport remarkWikiLink from 'remark-wiki-link';\nimport remarkDeflist from 'remark-deflist';\nimport remarkRehype from 'remark-rehype';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeStringify from 'rehype-stringify';\nimport rehypeKatex from 'rehype-katex';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport type { Options as PrettyOptions } from 'rehype-pretty-code';\nimport rehypeMermaid from './rehypeMermaid';\n\nexport interface RenderOptions {\n  enableRawHtml?: boolean;\n  baseUrl?: string;\n  wikiLinkAliasDivider?: string;\n  prettyCode?: PrettyOptions;\n}\n\nexport interface RenderResult {\n  html: string;\n  assets: {\n    cssHrefs: string[];\n    inlineCss: string[];\n    jsModules: string[];\n  };\n}\n\nconst defaultPretty: PrettyOptions = {\n  theme: 'github-dark',\n};\n\nexport async function renderMarkdown(markdown: string, options: RenderOptions = {}): Promise<RenderResult> {\n  const enableRawHtml = options.enableRawHtml ?? true;\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkFrontmatter, ['yaml', 'toml'])\n    .use(remarkDirective)\n    .use(remarkGfm)\n    .use(remarkMath)\n    .use(remarkDeflist)\n    .use(remarkWikiLink, {\n      aliasDivider: options.wikiLinkAliasDivider ?? '|',\n      hrefTemplate: (permalink: string) => {\n        const encoded = encodeURIComponent(permalink);\n        return options.baseUrl ? `${options.baseUrl}#${encoded}` : `#${encoded}`;\n      },\n    })\n    .use(remarkRehype, { allowDangerousHtml: enableRawHtml });\n\n  if (enableRawHtml) processor.use(rehypeRaw);\n\n  processor\n    .use(rehypeMermaid)\n    .use(rehypeKatex)\n    .use(rehypePrettyCode, options.prettyCode ?? defaultPretty)\n    .use(rehypeStringify, { allowDangerousHtml: enableRawHtml });\n\n  const file = await processor.process(markdown);\n\n  const cssHrefs = [\n    // GitHub 样式，保证在多数平台有一致的基础排版\n    'https://cdn.jsdelivr.net/npm/github-markdown-css@5.8.1/github-markdown.min.css',\n    // KaTeX 样式\n    'https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/katex.min.css',\n  ];\n\n  const inlineCss: string[] = [\n    // 组件包内的基础样式（打印、布局等）\n    baseCss,\n  ];\n\n  const jsModules: string[] = [\n    // Mermaid 运行时，用于将 <pre class=\"language-mermaid\"> 或 ```mermaid 内容渲染为图\n    // 这里采用 ESM CDN，网页端直接使用；在服务端 PDF 渲染时通过 Puppeteer 预热\n    'https://cdn.jsdelivr.net/npm/mermaid@11.12.0/dist/mermaid.esm.min.mjs',\n  ];\n\n  return {\n    html: String(file),\n    assets: { cssHrefs, inlineCss, jsModules },\n  };\n}\n\nexport const baseCss = `\n/* 统一容器类，建议在页面中包裹 markdown-body 以复用 github-markdown-css */\n.markdown-body { box-sizing: border-box; min-width: 200px; max-width: 900px; margin: 0 auto; padding: 24px; }\n\n/* 打印优化 */\n@media print {\n  .no-print { display: none !important; }\n  .markdown-body { box-shadow: none; }\n  /* 避免代码分页断裂 */\n  pre, blockquote, table { break-inside: avoid; page-break-inside: avoid; }\n}\n\n/* 任务清单样式补丁（不同渲染器一致化） */\n.markdown-body input[type=\"checkbox\"] { margin-right: 0.5em; }\n\n/* Mermaid 容器对齐 */\n.markdown-body .mermaid { display: block; margin: 1rem auto; }\n`;\n\nexport default { renderMarkdown };\n\n\n","import type { Root, Element, Text, Parent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nfunction getText(node: Element): string {\n  return (node.children as Array<Text | any>)\n    .map((c) => (c && (c as any).value ? String((c as any).value) : ''))\n    .join('');\n}\n\nexport function rehypeMermaid() {\n  return (tree: Root) => {\n    visit(tree as any, 'element', (node: Element, _index: number | null, parent: Parent | null) => {\n      if (!parent) return;\n      if (node.tagName !== 'code') return;\n      const klass = (node.properties?.className as string[] | undefined) || [];\n      const isMermaid = klass.includes('language-mermaid') || klass.includes('mermaid');\n      if (!isMermaid) return;\n\n      const text = getText(node);\n      if ((parent as Element).tagName === 'pre') {\n        const pre = parent as unknown as Element;\n        pre.tagName = 'div';\n        pre.properties = { className: ['mermaid'] };\n        pre.children = [{ type: 'text', value: text } as unknown as Text];\n      } else {\n        node.tagName = 'div';\n        node.properties = { className: ['mermaid'] };\n        node.children = [{ type: 'text', value: text } as unknown as Text];\n      }\n    });\n  };\n}\n\nexport default rehypeMermaid;\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAwB;AACxB,0BAAwB;AACxB,wBAAsB;AACtB,yBAAuB;AACvB,gCAA8B;AAC9B,8BAA4B;AAC5B,8BAA2B;AAC3B,4BAA0B;AAC1B,2BAAyB;AACzB,wBAAsB;AACtB,8BAA4B;AAC5B,0BAAwB;AACxB,gCAA6B;;;ACX7B,8BAAsB;AAEtB,SAAS,QAAQ,MAAuB;AACtC,SAAQ,KAAK,SACV,IAAI,CAAC,MAAO,KAAM,EAAU,QAAQ,OAAQ,EAAU,KAAK,IAAI,EAAG,EAClE,KAAK,EAAE;AACZ;AAEO,SAAS,gBAAgB;AAC9B,SAAO,CAAC,SAAe;AACrB,uCAAM,MAAa,WAAW,CAAC,MAAe,QAAuB,WAA0B;AAC7F,UAAI,CAAC,OAAQ;AACb,UAAI,KAAK,YAAY,OAAQ;AAC7B,YAAM,QAAS,KAAK,YAAY,aAAsC,CAAC;AACvE,YAAM,YAAY,MAAM,SAAS,kBAAkB,KAAK,MAAM,SAAS,SAAS;AAChF,UAAI,CAAC,UAAW;AAEhB,YAAM,OAAO,QAAQ,IAAI;AACzB,UAAK,OAAmB,YAAY,OAAO;AACzC,cAAM,MAAM;AACZ,YAAI,UAAU;AACd,YAAI,aAAa,EAAE,WAAW,CAAC,SAAS,EAAE;AAC1C,YAAI,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,KAAK,CAAoB;AAAA,MAClE,OAAO;AACL,aAAK,UAAU;AACf,aAAK,aAAa,EAAE,WAAW,CAAC,SAAS,EAAE;AAC3C,aAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,KAAK,CAAoB;AAAA,MACnE;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAO,wBAAQ;;;ADDf,IAAM,gBAA+B;AAAA,EACnC,OAAO;AACT;AAEA,eAAsB,eAAe,UAAkB,UAAyB,CAAC,GAA0B;AACzG,QAAM,gBAAgB,QAAQ,iBAAiB;AAE/C,QAAM,gBAAY,wBAAQ,EACvB,IAAI,oBAAAA,OAAW,EACf,IAAI,0BAAAC,SAAmB,CAAC,QAAQ,MAAM,CAAC,EACvC,IAAI,wBAAAC,OAAe,EACnB,IAAI,kBAAAC,OAAS,EACb,IAAI,mBAAAC,OAAU,EACd,IAAI,sBAAAC,OAAa,EACjB,IAAI,wBAAAC,SAAgB;AAAA,IACnB,cAAc,QAAQ,wBAAwB;AAAA,IAC9C,cAAc,CAAC,cAAsB;AACnC,YAAM,UAAU,mBAAmB,SAAS;AAC5C,aAAO,QAAQ,UAAU,GAAG,QAAQ,OAAO,IAAI,OAAO,KAAK,IAAI,OAAO;AAAA,IACxE;AAAA,EACF,CAAC,EACA,IAAI,qBAAAC,SAAc,EAAE,oBAAoB,cAAc,CAAC;AAE1D,MAAI,cAAe,WAAU,IAAI,kBAAAC,OAAS;AAE1C,YACG,IAAI,qBAAa,EACjB,IAAI,oBAAAC,OAAW,EACf,IAAI,0BAAAC,SAAkB,QAAQ,cAAc,aAAa,EACzD,IAAI,wBAAAC,SAAiB,EAAE,oBAAoB,cAAc,CAAC;AAE7D,QAAM,OAAO,MAAM,UAAU,QAAQ,QAAQ;AAE7C,QAAM,WAAW;AAAA;AAAA,IAEf;AAAA;AAAA,IAEA;AAAA,EACF;AAEA,QAAM,YAAsB;AAAA;AAAA,IAE1B;AAAA,EACF;AAEA,QAAM,YAAsB;AAAA;AAAA;AAAA,IAG1B;AAAA,EACF;AAEA,SAAO;AAAA,IACL,MAAM,OAAO,IAAI;AAAA,IACjB,QAAQ,EAAE,UAAU,WAAW,UAAU;AAAA,EAC3C;AACF;AAEO,IAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBvB,IAAO,gBAAQ,EAAE,eAAe;","names":["remarkParse","remarkFrontmatter","remarkDirective","remarkGfm","remarkMath","remarkDeflist","remarkWikiLink","remarkRehype","rehypeRaw","rehypeKatex","rehypePrettyCode","rehypeStringify"]}